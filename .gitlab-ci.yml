
variables:
  INPUT_AUTHOR: "Gitlab CI"
  GITHUB_REPOSITORY: websitecd/websitecd-examples
  INPUT_BUILD_DIR: build


# TEST website.yaml files
test_website_configs:
  stage: test
  only:
    refs:
      - main
  tags:
    - docker
  image:
    name: quay.io/websitecd/config-validator-jvm
    entrypoint: [ "" ]
  script:
    - /deployments/run-java.sh $(pwd)/websites/01-simple/website.yaml $(pwd)/websites/02-advanced/website.yaml $(pwd)/websites/03-spa-restapi-mongo/website.yaml



# PUBLISH to branches

.prepare_cacert: &prepare_cacert
  # If IMPORT_CACERT_URL contains URL to CA certificate performs the CA import
  - |
    if [[ -z $IMPORT_CACERT_URL ]]; then
      echo "Nothing to import"
    else
      echo "Importing ${IMPORT_CACERT_URL}"
      curl -k $IMPORT_CACERT_URL --create-dirs -o /usr/local/share/ca-certificates/gitlab-imported-ca.crt
      update-ca-certificates
    fi


.publish: &publish
  - mkdir build
  - cp -r websites build
  # Same way as github actions based on https://github.com/crazy-max/ghaction-github-pages
  - curl https://raw.githubusercontent.com/crazy-max/ghaction-github-pages/dev/dist/index.js > ghaction-github-pages.js
  - node ghaction-github-pages.js


publish_prod:
  stage: deploy
  only:
    refs:
      - main
  tags:
    - docker
  image: node:12
  variables:
    # Variables needs to be INPUT_variable_name_uppercase
    # see https://github.com/actions/toolkit/blob/c9819f79d2a27c1f26ef7ea85ff44346e7d60741/packages/core/src/core.ts#L69
    INPUT_TARGET_BRANCH: prod
    INPUT_COMMIT_MESSAGE: Publish to prod
    INPUT_KEEP_HISTORY: "true"
    # Defined in Settings -> CI/CD
    # INPUT_DOMAIN:        # gitlab domain
    # GH_PAT:              # Format: oauth2:YOURTOKEN
  before_script:
    - *prepare_cacert
  script:
    - *publish
  when: manual

publish_prod_no_history:
  stage: deploy
  only:
    refs:
      - main
  tags:
    - docker
  image: node:12
  variables:
    INPUT_TARGET_BRANCH: prod_no_history
    INPUT_COMMIT_MESSAGE: Publish to prod
    INPUT_KEEP_HISTORY: "false"
  before_script:
    - *prepare_cacert
  script:
    - *publish
  when: manual